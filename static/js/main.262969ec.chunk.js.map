{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","type","className","value","onChange","map","option","vaule","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","firstcurrency","Object","keys","rates","base","Navbar","expand","bg","variant","fixed","Brand","href","e","target","ReactDOM","render","document","getElementById"],"mappings":"sNAGe,SAASA,EAAYC,GAAQ,IAEpCC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,OACAC,EACAL,EADAK,eAEJ,OAEI,gCACG,uBAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOJ,EAAQK,SAAUJ,IAChE,wBAAQG,MAAON,EAAmBO,SAAUN,EAA5C,SACKF,EAAgBS,KAAI,SAAAC,GAAM,OAEvB,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,W,kBCV1BE,EAAW,qCAyFFC,MAvFf,WAAe,IASTC,EAAUC,EATF,EAEoCC,mBAAS,IAF7C,mBAEJhB,EAFI,KAEciB,EAFd,OAG8BD,qBAH9B,mBAGJE,EAHI,KAGWC,EAHX,OAI0BH,qBAJ1B,mBAIJI,EAJI,KAISC,EAJT,OAK6BL,qBAL7B,mBAKLM,EALK,KAKUC,EALV,OAMiBP,mBAAS,GAN1B,mBAMLb,EANK,KAMIqB,EANJ,OAO6CR,oBAAS,GAPtD,mBAOLS,EAPK,KAOkBC,EAPlB,KAkDZ,OAxCGD,GACCV,EAAaZ,EACbW,EAAWX,EAASmB,IAEtBR,EAAWX,EACXY,EAAaZ,EAASmB,GAGxBK,qBAAU,WACZC,MAAMhB,GACLiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdV,EAAgBS,EAAKI,MAAMH,SAIzB,IAEFN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GAEzBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IACnDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKI,MAAMhB,SAEzC,CAACF,EAAeE,IAYhB,qCACJ,cAACkB,EAAA,EAAD,CAASC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,MAApD,SACE,qBAAKpC,UAAU,MAAf,SACA,cAACgC,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,oCAIF,cAACN,EAAA,EAAD,CAASC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAOC,MAAM,SAApD,SACE,qBAAKpC,UAAU,MAAf,SACF,yJAKA,sBAAKA,UAAU,eAAf,UACM,yCACM,cAACR,EAAD,CAAaE,gBAAmBA,EAChCC,iBAAoBiB,EACpBhB,iBAAkB,SAAA2C,GAAC,OAAI1B,EAAgB0B,EAAEC,OAAOvC,QAChDH,eA7BN,SAAgCyC,GAC9BrB,EAAUqB,EAAEC,OAAOvC,OACnBmB,GAAwB,IA4BpBvB,OAAQY,IAIR,qBAAKT,UAAU,SAAf,eAEA,cAACR,EAAD,CAAaE,gBAAmBA,EAChCC,iBAAoBmB,EACpBlB,iBAAkB,SAAA2C,GAAC,OAAIxB,EAAcwB,EAAEC,OAAOvC,QAC9CH,eAlCN,SAA8ByC,GAC5BrB,EAAUqB,EAAEC,OAAOvC,OACnBmB,GAAwB,IAiCpBvB,OAAUW,WCrFtBiC,IAASC,OAEL,cAAC,EAAD,IAIFC,SAASC,eAAe,W","file":"static/js/main.262969ec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function CurrencyRow(props) {\r\n    const {\r\n        currencyOptions, \r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        amount,\r\n        onChangeAmount\r\n    } = props\r\n    return (\r\n\r\n        <div >\r\n           <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/> \r\n           <select value={selectedCurrency}  onChange={onChangeCurrency} >\r\n               {currencyOptions.map(option => (\r\n                   \r\n                   <option key={option} vaule={option}>{option}</option>\r\n               ))}\r\n           </select>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar } from 'react-bootstrap';\n\n\n\nconst BASE_URL = 'https://api.ratesapi.io/api/latest'\n\nfunction App(){\n\n  const [ currencyOptions , setCurrencyOptions] = useState([])\n  const [ fromCurrency , setFromCurrency] = useState()\n  const [ toCurrency , setToCurrency] = useState()\n  const [exchangeRate , setExchangeRate] = useState()\n  const [amount , setAmount] = useState(1)\n  const [amountInFromCurrency , setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if(amountInFromCurrency){\n      fromAmount = amount\n      toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  useEffect(()=>{\nfetch(BASE_URL)\n.then(res => res.json())\n.then(data => {\n  const firstcurrency = Object.keys(data.rates)[0]\n  setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n  setFromCurrency(data.base)\n  setToCurrency(firstcurrency)\n  setExchangeRate(data.rates[firstcurrency])\n}\n  )\n\n  },[])\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null)\n    {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n    .then(res => res.json())\n    .then(data => setExchangeRate(data.rates[toCurrency]))\n    }\n  },[fromCurrency , toCurrency])\n\n      function handleFromAmountChange(e){\n        setAmount(e.target.value)\n        setAmountInFromCurrency(true)\n      }\n\n      function handleToAmountChange(e){\n        setAmount(e.target.value)\n        setAmountInFromCurrency(false)\n      }\n  return (\n    <>\n<Navbar  expand=\"sm\" bg=\"dark\" variant=\"dark\" fixed=\"top\" >\n  <div className=\"pad\">\n  <Navbar.Brand href=\"#home\"  >Currency Converter</Navbar.Brand>\n  </div>\n</Navbar>\n\n<Navbar  expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"bottom\" >\n  <div className=\"Bot\">\n<p  >Copyright &copy; Currency Converter.   All Rights Reserved  |  Contact Us: +91 90000 00000 |  Kishenkumar220@gmail.com</p>\n</div>\n</Navbar>\n    \n\n<div className=\"ConverterBox\">\n      <h1>Convert</h1>\n            <CurrencyRow currencyOptions = {currencyOptions} \n            selectedCurrency = {fromCurrency}\n            onChangeCurrency={e => setFromCurrency(e.target.value)}\n            onChangeAmount={handleFromAmountChange}\n            amount={fromAmount}\n            />\n              \n            \n            <div className=\"equals\">=</div>\n            \n            <CurrencyRow currencyOptions = {currencyOptions}\n            selectedCurrency = {toCurrency}\n            onChangeCurrency={e => setToCurrency(e.target.value)}\n            onChangeAmount={handleToAmountChange}\n            amount = {toAmount}\n            />\n            </div>\n </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n    \n    <App />\n \n    ,     \n   \n  document.getElementById('root')\n\n\n  \n);  \n\n\n"],"sourceRoot":""}